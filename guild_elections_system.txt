Guild Elections and Leadership System Documentation
===================================================

Version: 1.0.0
Last Updated: 2025-01-23

OVERVIEW
========

The Guild Elections and Leadership System provides comprehensive democratic governance 
for guilds through periodic elections, succession events, and internal power dynamics. 
The system handles leadership transitions, candidate campaigns, voting mechanisms, and 
the political consequences of electoral outcomes.

This system enables dynamic guild leadership that responds to member satisfaction, 
faction politics, and guild performance while providing rich opportunities for PC 
participation in guild governance and political maneuvering.

CORE COMPONENTS
===============

1. GuildElection Class
   - Complete election event management from nomination to results
   - Campaign system with daily activities and faction involvement
   - Weighted voting based on member influence and approval ratings
   - Multiple election types: scheduled, emergency, impeachment, succession

2. Enhanced LocalGuild Class
   - Election cycle tracking and candidate management
   - Leadership history and approval rating systems
   - Integration with existing guild systems and charter governance

3. Political Action System
   - PC candidacy and campaign management
   - Vote manipulation and scandal investigation
   - Faction endorsements and political maneuvering

KEY FEATURES
============

Election Cycle Management
-------------------------
Guilds operate on democratic cycles with regular leadership elections:
- Default election cycle: 365 days (annual elections)
- Configurable election frequency based on guild charter
- Emergency elections triggered by crisis conditions
- Impeachment proceedings for failed leadership

Enhanced LocalGuild Attributes:
- election_cycle_days: Time between scheduled elections
- next_election_day: Day of next scheduled election
- leadership_candidate_ids: Current election candidates
- leadership_preferences: Candidate evaluation metrics
- head_of_guild: Current leader NPC/PC ID
- leadership_approval_rating: Current leader popularity

Election Types and Triggers
----------------------------
**SCHEDULED:** Regular democratic elections
- Triggered when current_day >= next_election_day
- Two weeks campaign period with candidate nomination
- Standard voting procedures and majority requirements

**EMERGENCY:** Crisis-driven leadership changes
- Triggered by guild stability < 25% (5% daily chance)
- Shortened campaign period (3 days notice)
- Focuses on crisis management and stability restoration

**IMPEACHMENT:** Removal of unpopular leaders
- Triggered by approval rating < 30% (10% daily chance)
- One week notice period for defense and counter-campaigns
- Higher voter turnout due to crisis nature

**SUCCESSION:** Planned leadership transitions
- Triggered by charter mandates or leader retirement
- Normal campaign periods with established procedures
- Focus on continuity and policy implementation

**COUP:** Hostile takeover attempts
- Triggered by extreme instability or faction interference
- Minimal notice, contested legitimacy
- High risk of guild fragmentation

Campaign System
---------------
Elections feature comprehensive campaign mechanics:

**Campaign Duration:** 14 days (adjustable based on election type)
**Campaign Activities:**
- Public speeches: High visibility, moderate cost
- Guild meetings: Direct member engagement
- Door-to-door: Personal outreach, low cost
- Faction negotiations: Endorsement seeking
- Fundraising: Financial resource gathering

**Campaign Effectiveness Factors:**
- Candidate approval rating and platform appeal
- Campaign funding and resource allocation
- Faction endorsements and political backing
- Guild type alignment with candidate policies
- Scandal impact and opposition research

**Daily Campaign Processing:**
- PC candidates have enhanced effectiveness (80% base vs. 30-70% NPC)
- Random events including scandals and endorsements
- Faction interference and political maneuvering
- Resource management and strategic decision-making

Voting and Decision-Making
--------------------------
Elections use weighted voting based on multiple factors:

**Voter Turnout Calculation:**
- Base turnout: 70% (90% emergency, 85% impeachment)
- Guild stability modifier affects participation
- Random variance for unpredictability

**Vote Score Calculation:**
```
base_score = 10.0
approval_modifier = candidate_approval / 100.0
campaign_modifier = 1.0 + (campaign_events * 0.1)
endorsement_bonus = endorsements * 5.0
guild_type_bonus = platform_alignment_bonus
scandal_penalty = scandals * 3.0
pc_bonus = 1.2x if PC candidate
final_score = (base_score * modifiers + bonuses - penalties) * random_factor
```

**Decision Outcomes:**
- Decisive Victory: 30%+ margin
- Narrow Victory: 10-30% margin  
- Contested Result: 5-10% margin
- Tie Broken: <5% margin
- No Confidence: No viable candidates

PC INTEGRATION
==============

Candidacy and Leadership
------------------------
PCs can fully participate in guild democratic processes:

**Announce Candidacy:**
- Requires guild membership and standing
- Platform definition with policy priorities
- Campaign resource allocation and strategy

**Campaign Activities:**
- Enhanced effectiveness compared to NPCs
- Strategic activity selection and timing
- Resource management and faction negotiations

**Leadership Responsibilities:**
- Policy implementation from campaign platform
- Approval rating management through governance
- Charter compliance and guild stability maintenance

Political Maneuvering
---------------------
**Vote Manipulation:**
- Persuasion: Low risk, moderate effectiveness
- Bribery: High effectiveness, high discovery risk
- Intimidation: Moderate effectiveness, reputation risk

**Opposition Research:**
- Scandal investigation and exposure
- Candidate weakness exploitation
- Timing and strategic revelation

**Coalition Building:**
- Faction endorsement acquisition
- Inter-guild alliance formation
- Member loyalty and support networks

**Election Security:**
- Vote integrity protection
- Corruption investigation and exposure
- Democratic process preservation

Discovery and Consequences
--------------------------
PC political actions carry discovery risks:
- Discovery chance varies by action type and skill
- Reputation damage with guild members
- Potential disqualification from candidacy
- Long-term political consequences

Success provides:
- Political influence and faction connections
- Guild leadership positions and authority
- Policy implementation opportunities
- Regional political network access

INTEGRATION HOOKS
=================

Guild Charter System
--------------------
Elections operate within charter frameworks:
- Charter defines election procedures and requirements
- Candidate eligibility based on charter membership criteria
- Policy platforms must align with charter principles
- Charter amendments through electoral mandates

**Charter-Based Triggers:**
- Mandatory leadership rotations
- Term limits and succession planning
- Emergency powers and crisis procedures
- Democratic participation requirements

Faction Layer Integration
-------------------------
Factions actively participate in guild elections:
- Candidate endorsements and financial support
- Vote manipulation and information warfare
- Strategic alliance formation
- Long-term political positioning

**Faction Activities:**
- Daily interference chance (20%)
- Endorsement provision and withdrawal
- Campaign funding and resource allocation
- Opposition research and scandal generation

Reputation and Memory Systems
-----------------------------
Elections create lasting political memories:
- NPC memory of electoral promises and performance
- Reputation changes based on campaign conduct
- Long-term relationship effects from political alliances
- Settlement-wide political awareness and engagement

Settlement and Economy Integration
----------------------------------
Electoral outcomes affect broader systems:
- Settlement stability impact from election results
- Economic policy changes from new leadership
- Trade relationship effects from faction alignments
- Regional political influence shifts

CORE FUNCTIONS
==============

schedule_guild_election()
-------------------------
**Purpose:** Determine if guild should hold an election
**Parameters:**
- guild: LocalGuild object to evaluate
- current_day: Current simulation day

**Triggers:**
- Scheduled election cycle completion
- Emergency conditions (stability < 25%)
- Low approval ratings (< 30%)
- Charter-mandated leadership changes

**Process:**
1. Check scheduled election timing
2. Evaluate emergency trigger conditions
3. Create GuildElection object if triggered
4. Populate candidate list from eligible members
5. Initialize campaign system and preferences
6. Record election scheduling in guild history

conduct_guild_election()
------------------------
**Purpose:** Process election campaigns and voting
**Parameters:**
- guild: Guild holding the election
- election: GuildElection object
- current_day: Current simulation day
- pc_actions: Optional PC influence actions

**Campaign Phase Processing:**
- Daily campaign activity simulation
- Faction interference and endorsements
- Scandal generation and political events
- PC action processing and consequences

**Election Day Processing:**
- Voter turnout calculation
- Vote score computation for all candidates
- Winner determination and outcome classification
- Consequence application and leadership transition

**Returns:** Comprehensive election results including:
- Winner identification and margin of victory
- Voter turnout and participation metrics
- Faction influence and endorsement effects
- Post-election stability and policy impacts

TECHNICAL SPECIFICATIONS
=========================

Performance Characteristics
---------------------------
- Memory usage: 3-8KB per active election
- Daily processing: <1ms per guild with active elections
- Campaign simulation: Efficient batch processing
- Integration overhead: Minimal impact on existing systems

Election Algorithm Complexity
-----------------------------
- Candidate evaluation: O(n) where n = candidate count
- Vote calculation: O(n*m) where m = voting factors
- Faction processing: O(f) where f = active factions
- Daily campaign: O(c*a) where c = candidates, a = activities

Scalability Targets
-------------------
- Concurrent elections: 50+ simultaneous guild elections
- Candidate support: 10+ candidates per election
- Campaign duration: Flexible 3-30 day periods
- Historical tracking: Complete election archives

Data Persistence
-----------------
- Election results permanently recorded in guild history
- Leadership transitions tracked with full context
- Campaign activities logged for reputation system
- Political relationships maintained for future reference

QUEST INTEGRATION
=================

Pre-Election Quests
-------------------
**Campaign Manager:**
- Organize campaign events and strategy
- Secure faction endorsements and support
- Counter opposition research and scandals
- Difficulty: Medium, Rewards: Political influence

**Election Investigation:**
- Investigate corruption and vote manipulation
- Expose candidate scandals and conflicts
- Protect electoral integrity and fairness
- Difficulty: Hard, Rewards: Justice reputation

During-Election Quests
----------------------
**Election Security:**
- Prevent vote manipulation and corruption
- Maintain order during voting procedures
- Ensure accurate vote counting and reporting
- Difficulty: Medium, Rewards: Guild stability

**Political Maneuvering:**
- Influence undecided voters and factions
- Execute last-minute campaign strategies
- Manage election day crises and challenges
- Difficulty: Variable, Rewards: Political connections

Post-Election Quests
--------------------
**Election Dispute Resolution:**
- Mediate contested election results
- Investigate voting irregularities
- Restore guild unity after divisive campaigns
- Difficulty: Hard, Rewards: Diplomatic reputation

**Policy Implementation:**
- Execute campaign promises and platform planks
- Navigate political opposition and resistance
- Build consensus for leadership initiatives
- Difficulty: Medium, Rewards: Leadership effectiveness

EXPANSION AREAS
===============

Advanced Election Variants
---------------------------
- Multi-guild regional elections
- Ranked choice voting systems
- Coalition government formations
- Recall elections and confidence votes

Enhanced Campaign Mechanics
----------------------------
- Detailed platform customization
- Advanced faction negotiation systems
- Media and propaganda campaigns
- Economic impact of campaign spending

Political Party Development
---------------------------
- Persistent political organizations
- Cross-guild political movements
- Ideological alignment systems
- Multi-election political careers

Integration Expansions
----------------------
- Settlement-wide political systems
- Regional governance hierarchies
- International diplomatic elections
- Economic guild regulatory bodies

USAGE EXAMPLES
==============

Basic Election Scheduling:
```python
# Check for election during daily guild update
election = schedule_guild_election(merchants_guild, current_day)
if election:
    print(f"Election scheduled for day {election.election_day}")
    print(f"Candidates: {len(election.candidates)}")
```

PC Candidacy Announcement:
```python
# PC announces candidacy with platform
pc_actions = [{
    'type': 'announce_candidacy',
    'pc_id': 'player_character_1',
    'pc_name': 'Marcus Goldweaver',
    'platform': {
        'trade_expansion': True,
        'economic_growth': True,
        'foreign_relations': True
    }
}]

results = conduct_guild_election(guild, election, current_day, pc_actions)
```

Election Result Processing:
```python
# Process election results and apply consequences
if results and results['winner_id']:
    winner_name = election.candidates[results['winner_id']]['name']
    margin = results['margin_of_victory']
    turnout = results['voter_turnout']
    
    print(f"{winner_name} wins with {margin:.1%} margin")
    print(f"Voter turnout: {turnout:.1%}")
    
    # Apply policy changes
    for policy in results['post_election_effects']['guild_policy_changes']:
        implement_guild_policy(guild, policy)
```

Campaign Activity Example:
```python
# PC conducts campaign activities
campaign_action = {
    'type': 'campaign_activity',
    'pc_id': 'player_character_1',
    'activity': 'public_speech',
    'effectiveness': 0.9  # High PC skill level
}

daily_results = conduct_guild_election(guild, election, current_day, [campaign_action])
```

NARRATIVE INTEGRATION
=====================

The Guild Elections System creates rich political storylines:

**Democratic Drama:**
- Close elections with unexpected outcomes
- Political scandals and corruption exposés
- Faction meddling and foreign interference
- Grassroots movements and popular uprisings

**Leadership Transitions:**
- Peaceful democratic transfers of power
- Contested elections and legitimacy crises
- Emergency successions during guild crises
- Revolutionary changes in guild direction

**Political Consequences:**
- Policy implementation and resistance
- Coalition building and opposition formation
- Regional political realignment
- Long-term governance effectiveness

**Character Development:**
- PC political skill advancement
- Reputation building through democratic participation
- Leadership responsibility and accountability
- Political network formation and maintenance

CONCLUSION
==========

The Guild Elections and Leadership System provides a comprehensive framework for 
democratic governance within guilds, creating dynamic political environments that 
respond to member needs, faction pressures, and regional events. Through regular 
elections, emergency successions, and political maneuvering, the system generates 
compelling narratives while maintaining realistic governance structures.

The system's integration with existing guild mechanics ensures that electoral 
outcomes have meaningful consequences for guild operations, member satisfaction, 
and broader regional politics, creating a living political ecosystem that evolves 
based on player actions and systemic pressures. 