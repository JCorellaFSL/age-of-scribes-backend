# Guild Charter and Administration System Documentation

## Overview

The Guild Charter and Administration System defines internal governance, rules, and justice logic for each guild. It ensures that guild operations are governed by consistent internal rules and consequences, creating realistic power dynamics and accountability that apply equally to NPCs and Player Characters.

## Core Classes

### GuildCharter

The GuildCharter class represents the foundational document that governs guild operations, member behavior, and internal justice.

#### Attributes:

- **guild_id**: str - Unique identifier of the guild this charter governs
- **charter_name**: str - Display name of the charter
- **core_doctrine**: str - Fundamental principle of the guild (e.g., "artisan protection", "free trade", "knowledge above law")
- **accepted_professions**: list[str] - List of professions welcomed in the guild
- **political_alignment**: Optional[str] - Faction ID or "neutral"
- **membership_requirements**: dict[str, Any] - Requirements for joining (skills, loyalty, etc.)
- **punishment_policy**: dict[str, str] - Mapping of offenses to punishments
- **promotion_criteria**: dict[str, Any] - Requirements for rank advancement
- **economic_rights**: dict[str, bool] - Economic privileges and restrictions
- **is_outlawed**: bool - Whether the guild is banned regionally/factionally
- **amendment_history**: list[dict] - Tracks past edits or policy changes

#### Default Membership Requirements:

- **min_skill_level**: 0.4 - Minimum skill in relevant profession
- **min_reputation**: 0.1 - Minimum local reputation
- **min_loyalty**: 0.2 - Minimum loyalty to settlement/faction
- **max_criminal_record**: 2 - Maximum serious crimes allowed
- **wealth_requirement**: 0.0 - Gold required for membership
- **sponsor_required**: False - Whether existing member must sponsor
- **probation_period**: 30 - Days of probationary membership

#### Default Punishment Policy:

- **minor_theft**: warning
- **major_theft**: suspension
- **smuggling**: expulsion
- **betrayal_of_secrets**: expulsion
- **violence_against_member**: demotion
- **violence_against_outsider**: fine
- **failure_to_pay_dues**: warning
- **persistent_dues_default**: suspension
- **violation_of_trade_rules**: fine
- **competition_violation**: demotion
- **charter_violation**: warning
- **repeated_charter_violation**: expulsion
- **treason**: blacklist
- **desertion_in_crisis**: expulsion
- **corruption**: demotion
- **insubordination**: warning

#### Default Economic Rights:

- **trade_control**: False - Can control who trades what
- **tax_privileges**: False - Reduced tax rates
- **monopoly_rights**: False - Exclusive trade rights
- **price_setting**: False - Can set standard prices
- **quality_standards**: True - Can enforce quality standards
- **apprentice_training**: True - Can train apprentices
- **cross_border_trade**: False - Special trade permissions
- **government_contracts**: False - Priority for government work

## Updated LocalGuild Class

The LocalGuild class has been enhanced with charter integration:

### New Attributes:

- **charter**: Optional[GuildCharter] - The guild's governing charter

### New Methods:

#### apply_policy(policy_key: str, value: Any) -> None

Applies a charter policy to the guild. Supports:
- Violation tolerance settings
- Internal reputation impact
- Outlaw status changes
- Membership requirement updates
- Punishment policy modifications
- Economic rights changes

#### enforce_punishment(npc: NPCProfile, offense: str) -> None

Enforces punishment on an NPC according to charter policy. Automatically:
- Looks up punishment in charter policy
- Executes appropriate punishment
- Logs event in guild and NPC history
- Updates relevant attributes (loyalty, reputation, etc.)

## Core Functions

### evaluate_guild_policy_compliance(npc: NPCProfile, guild: LocalGuild) -> Optional[str]

Checks if an NPC violates charter terms and returns recommended punishment action.

**Process:**
1. Evaluates member compliance against charter
2. Identifies most severe violation
3. Maps violation type to offense category
4. Returns recommended punishment from charter policy

**Returns:** Punishment action string or None if compliant

### evaluate_member_compliance(npc: NPCProfile, charter: GuildCharter) -> Dict[str, Any]

Evaluates if an NPC complies with charter requirements.

**Checks:**
- Profession alignment with accepted professions
- Loyalty requirements
- Reputation requirements
- Political alignment conflicts

**Returns:** Compliance report with:
- overall_compliant: bool
- violations: list of violation details
- warnings: list of warning details
- compliance_score: 0.0-1.0 score
- recommended_action: suggested punishment

### process_guild_punishment(guild: LocalGuild, npc: NPCProfile, offense: str) -> Dict[str, Any]

Processes punishment according to guild charter policy.

**Punishment Types:**

1. **WARNING**: Records warning in NPC history
2. **FINE**: Applies monetary penalty
3. **DEMOTION**: Reduces member rank, decreases loyalty
4. **SUSPENSION**: Temporary exclusion, loyalty and reputation loss
5. **EXPULSION**: Permanent removal from guild, reputation impact
6. **BLACKLIST**: Permanent ban from all guilds of this type, severe penalties
7. **COMMUNITY_SERVICE**: Assigned service hours, minor loyalty reduction

**Returns:** Punishment result with execution details and effects

### generate_default_charter(guild_id: str, guild_type: str, guild_name: str) -> GuildCharter

Generates appropriate default charter based on guild type.

**Guild Type Customizations:**

#### Merchants
- **Core Doctrine**: "fair trade and mutual prosperity"
- **Professions**: merchant, trader, banker, caravan_master
- **Economic Rights**: trade_control, price_setting, cross_border_trade

#### Craftsmen
- **Core Doctrine**: "mastery of craft and protection of trade secrets"
- **Professions**: blacksmith, carpenter, mason, jeweler, tailor
- **Economic Rights**: monopoly_rights, price_setting, government_contracts

#### Scholars
- **Core Doctrine**: "pursuit of knowledge and preservation of learning"
- **Professions**: scribe, scholar, librarian, teacher, researcher
- **Economic Rights**: tax_privileges, government_contracts

#### Warriors
- **Core Doctrine**: "protection of the innocent and martial excellence"
- **Professions**: guard, soldier, mercenary, trainer
- **Economic Rights**: government_contracts

## PC-Specific Rules

### Guild Foundation
- PC-founded guilds must define a charter at time of founding
- Charter creation follows same rules as NPC guilds
- Initial charter based on guild type with customization options

### Charter Amendments
- PCs can propose amendments requiring support from high-rank members
- Amendment types require different levels of support:
  - **Doctrine Change**: 75% of masters
  - **Profession Update**: 60% of masters
  - **Requirement Modification**: 50% of masters
  - **Punishment Revision**: 60% of masters
  - **Economic Rights Change**: 75% of masters
  - **Political Realignment**: 80% of masters

### PC Justice
- PCs can be judged by their own charter if they violate policies
- Same punishment system applies regardless of NPC or PC status
- No special exemptions or privileges for PC leadership

### Leadership Consequences
If PC attempts to override charter unjustly:
- May trigger rebellion from loyal members
- Can cause splinter chapters to form
- Loyal NPCs may turn against PC leadership
- Guild stability and loyalty scores decrease

## Integration Hooks

### Guild Reputation System
- Charter violations affect internal guild reputation
- Repeated violations damage external reputation
- Fair enforcement improves guild stability

### Faction Integration
- Factions can ban or subsidize guilds based on charters
- Political alignment affects faction relationships
- Outlawed status impacts guild operations

### Rumor Engine
- Charter violations can spread via gossip
- Punishment events generate rumors
- Unfair enforcement creates negative rumors

### Memory Core
- NPCs remember internal injustices or unfair trials
- Punishment history affects future behavior
- Charter enforcement impacts NPC personality development

## Usage Examples

### Creating a Guild Charter
```python
from guild_charter_system import generate_default_charter

# Generate default merchant guild charter
charter = generate_default_charter(
    guild_id="guild_001",
    guild_type="merchants",
    guild_name="Riverside Merchants Guild"
)

# Assign to guild
guild.charter = charter
```

### Evaluating Member Compliance
```python
from guild_charter_system import evaluate_guild_policy_compliance

# Check if member violates policy
recommended_punishment = evaluate_guild_policy_compliance(npc, guild)

if recommended_punishment:
    # Enforce punishment through guild
    guild.enforce_punishment(npc, "charter_violation")
```

### Applying Policy Changes
```python
# Update guild policies
guild.apply_policy("violation_tolerance", 0.2)  # Make guild stricter
guild.apply_policy("membership_min_loyalty", 0.3)  # Increase loyalty requirement
guild.apply_policy("punishment_smuggling", "blacklist")  # Harsher smuggling penalty
guild.apply_policy("economic_monopoly_rights", True)  # Grant monopoly rights
```

## System Benefits

### Realistic Governance
- Guilds operate under consistent internal rules
- Power dynamics reflect actual organizational behavior
- Leadership accountability prevents arbitrary decisions

### Equal Treatment
- Same rules apply to NPCs and PCs
- No special privileges based on player status
- Consequences are consistently applied

### Dynamic Evolution
- Charters can be amended through political processes
- Guild policies evolve based on member needs
- External pressures influence internal governance

### Rich Storytelling
- Charter violations create compelling narratives
- Internal conflicts arise from policy disagreements
- Justice systems reflect guild values and culture

## Configuration Options

### Charter Strictness
- **violation_tolerance**: 0.0 (strict) to 1.0 (lenient)
- **internal_reputation_impact**: Multiplier for reputation effects

### Punishment Severity
- Customize punishment_policy mapping
- Adjust fine amounts and suspension durations
- Configure blacklist scope and duration

### Membership Standards
- Adjust skill, loyalty, and reputation requirements
- Set wealth requirements for exclusive guilds
- Configure probation periods and sponsorship needs

### Economic Privileges
- Grant or revoke specific economic rights
- Balance power between different guild types
- Reflect political and economic realities

This system creates a comprehensive framework for guild governance that enhances gameplay through realistic internal politics, meaningful consequences for actions, and rich narrative possibilities. 